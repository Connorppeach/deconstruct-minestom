{
  "reflection":[
    {
      "type":"[B"
    },
    {
      "type":"[C"
    },
    {
      "type":"[D"
    },
    {
      "type":"[F"
    },
    {
      "type":"[I"
    },
    {
      "type":"[J"
    },
    {
      "type":"[Ljava.lang.Object;"
    },
    {
      "type":"[S"
    },
    {
      "type":"[Z"
    },
    {
      "type":"clojure.asm.ClassVisitor"
    },
    {
      "type":"clojure.asm.ClassWriter"
    },
    {
      "type":"clojure.asm.Opcodes"
    },
    {
      "type":"clojure.asm.Type"
    },
    {
      "type":"clojure.asm.commons.GeneratorAdapter"
    },
    {
      "type":"clojure.asm.commons.Method"
    },
    {
      "type":"clojure.core.ArrayChunk"
    },
    {
      "type":"clojure.core.ArrayManager"
    },
    {
      "type":"clojure.core.Eduction"
    },
    {
      "type":"clojure.core.IVecImpl"
    },
    {
      "type":"clojure.core.Inst"
    },
    {
      "type":"clojure.core.Vec"
    },
    {
      "type":"clojure.core.VecNode"
    },
    {
      "type":"clojure.core.VecSeq"
    },
    {
      "type":"clojure.core.protocols.CollReduce"
    },
    {
      "type":"clojure.core.protocols.Datafiable"
    },
    {
      "type":"clojure.core.protocols.IKVReduce"
    },
    {
      "type":"clojure.core.protocols.InternalReduce"
    },
    {
      "type":"clojure.core.protocols.Navigable"
    },
    {
      "type":"clojure.core.protocols__init"
    },
    {
      "type":"clojure.core.server__init"
    },
    {
      "type":"clojure.core__init"
    },
    {
      "type":"clojure.core_deftype__init"
    },
    {
      "type":"clojure.core_print__init"
    },
    {
      "type":"clojure.core_proxy__init"
    },
    {
      "type":"clojure.edn__init"
    },
    {
      "type":"clojure.genclass__init"
    },
    {
      "type":"clojure.gvec__init"
    },
    {
      "type":"clojure.instant__init"
    },
    {
      "type":"clojure.java.io.Coercions"
    },
    {
      "type":"clojure.java.io.IOFactory"
    },
    {
      "type":"clojure.java.io__init"
    },
    {
      "type":"clojure.lang.APersistentMap$KeySeq"
    },
    {
      "type":"clojure.lang.APersistentMap$ValSeq"
    },
    {
      "type":"clojure.lang.ASeq"
    },
    {
      "type":"clojure.lang.BigInt"
    },
    {
      "type":"clojure.lang.ChunkBuffer"
    },
    {
      "type":"clojure.lang.Compiler"
    },
    {
      "type":"clojure.lang.Compiler$CompilerException"
    },
    {
      "type":"clojure.lang.DynamicClassLoader"
    },
    {
      "type":"clojure.lang.ExceptionInfo"
    },
    {
      "type":"clojure.lang.Fn"
    },
    {
      "type":"clojure.lang.IChunk"
    },
    {
      "type":"clojure.lang.IChunkedSeq"
    },
    {
      "type":"clojure.lang.IDeref"
    },
    {
      "type":"clojure.lang.IExceptionInfo"
    },
    {
      "type":"clojure.lang.IFn"
    },
    {
      "type":"clojure.lang.IHashEq"
    },
    {
      "type":"clojure.lang.IKVReduce"
    },
    {
      "type":"clojure.lang.IPersistentCollection"
    },
    {
      "type":"clojure.lang.IPersistentList"
    },
    {
      "type":"clojure.lang.IPersistentMap"
    },
    {
      "type":"clojure.lang.IPersistentSet"
    },
    {
      "type":"clojure.lang.IPersistentVector"
    },
    {
      "type":"clojure.lang.IProxy"
    },
    {
      "type":"clojure.lang.IRecord"
    },
    {
      "type":"clojure.lang.IReduceInit"
    },
    {
      "type":"clojure.lang.ISeq"
    },
    {
      "type":"clojure.lang.Keyword"
    },
    {
      "type":"clojure.lang.LazilyPersistentVector"
    },
    {
      "type":"clojure.lang.LazySeq"
    },
    {
      "type":"clojure.lang.LineNumberingPushbackReader"
    },
    {
      "type":"clojure.lang.LispReader$ReaderException"
    },
    {
      "type":"clojure.lang.Murmur3"
    },
    {
      "type":"clojure.lang.Namespace"
    },
    {
      "type":"clojure.lang.PersistentHashMap"
    },
    {
      "type":"clojure.lang.PersistentHashSet"
    },
    {
      "type":"clojure.lang.PersistentVector"
    },
    {
      "type":"clojure.lang.RT"
    },
    {
      "type":"clojure.lang.Ratio"
    },
    {
      "type":"clojure.lang.ReaderConditional"
    },
    {
      "type":"clojure.lang.Reflector"
    },
    {
      "type":"clojure.lang.SeqIterator"
    },
    {
      "type":"clojure.lang.Sequential"
    },
    {
      "type":"clojure.lang.StringSeq"
    },
    {
      "type":"clojure.lang.Symbol"
    },
    {
      "type":"clojure.lang.TaggedLiteral"
    },
    {
      "type":"clojure.lang.Util"
    },
    {
      "type":"clojure.lang.Var"
    },
    {
      "type":"clojure.lang.Volatile"
    },
    {
      "type":"clojure.main__init"
    },
    {
      "type":"clojure.spec.alpha.Spec"
    },
    {
      "type":"clojure.spec.alpha.Specize"
    },
    {
      "type":"clojure.spec.alpha__init"
    },
    {
      "type":"clojure.spec.gen.alpha__init"
    },
    {
      "type":"clojure.string__init"
    },
    {
      "type":"clojure.uuid__init"
    },
    {
      "type":"clojure.walk__init"
    },
    {
      "type":"com.github.benmanes.caffeine.cache.BBHeader$ReadAndWriteCounterRef",
      "fields":[{"name":"writeCounter"}]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.BBHeader$ReadCounterRef",
      "fields":[{"name":"readCounter"}]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
      "fields":[{"name":"drainStatus"}]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields":[{"name":"producerLimit"}]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
      "fields":[{"name":"consumerIndex"}]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
      "fields":[{"name":"producerIndex"}]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.BoundedLocalCache",
      "fields":[{"name":"refreshes"}]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.FS",
      "fields":[{"name":"key"},{"name":"value"}],
      "methods":[{"name":"<init>","parameterTypes":[] }]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.FW",
      "fields":[{"name":"value"}],
      "methods":[{"name":"<init>","parameterTypes":[] }]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.PS",
      "fields":[{"name":"key"},{"name":"value"}]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.PSW",
      "fields":[{"name":"writeTime"}],
      "methods":[{"name":"<init>","parameterTypes":[] }]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.PW",
      "fields":[{"name":"value"}]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.PWW",
      "fields":[{"name":"writeTime"}],
      "methods":[{"name":"<init>","parameterTypes":[] }]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.SIW",
      "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.AsyncCacheLoader","boolean"] }]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.SSW",
      "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.AsyncCacheLoader","boolean"] }]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.StripedBuffer",
      "fields":[{"name":"tableBusy"}]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.WI",
      "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.AsyncCacheLoader","boolean"] }]
    },
    {
      "type":"com.github.benmanes.caffeine.cache.WS",
      "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.AsyncCacheLoader","boolean"] }]
    },
    {
      "type":"java.io.BufferedInputStream"
    },
    {
      "type":"java.io.BufferedOutputStream"
    },
    {
      "type":"java.io.BufferedReader"
    },
    {
      "type":"java.io.BufferedWriter"
    },
    {
      "type":"java.io.ByteArrayInputStream"
    },
    {
      "type":"java.io.ByteArrayOutputStream"
    },
    {
      "type":"java.io.CharArrayReader"
    },
    {
      "type":"java.io.Closeable"
    },
    {
      "type":"java.io.File"
    },
    {
      "type":"java.io.FileInputStream"
    },
    {
      "type":"java.io.FileOutputStream"
    },
    {
      "type":"java.io.FileWriter"
    },
    {
      "type":"java.io.InputStream"
    },
    {
      "type":"java.io.InputStreamReader"
    },
    {
      "type":"java.io.NotSerializableException"
    },
    {
      "type":"java.io.OutputStream"
    },
    {
      "type":"java.io.OutputStreamWriter"
    },
    {
      "type":"java.io.PrintWriter"
    },
    {
      "type":"java.io.PushbackReader"
    },
    {
      "type":"java.io.Reader"
    },
    {
      "type":"java.io.Serializable"
    },
    {
      "type":"java.io.StringReader"
    },
    {
      "type":"java.io.Writer"
    },
    {
      "type":"java.lang.Boolean"
    },
    {
      "type":"java.lang.Character"
    },
    {
      "type":"java.lang.Class"
    },
    {
      "type":"java.lang.Double"
    },
    {
      "type":"java.lang.Float"
    },
    {
      "type":"java.lang.Iterable"
    },
    {
      "type":"java.lang.Long"
    },
    {
      "type":"java.lang.Math",
      "methods":[{"name":"abs","parameterTypes":["long"] }]
    },
    {
      "type":"java.lang.Number"
    },
    {
      "type":"java.lang.Object"
    },
    {
      "type":"java.lang.StackTraceElement"
    },
    {
      "type":"java.lang.String"
    },
    {
      "type":"java.lang.ThreadLocal"
    },
    {
      "type":"java.lang.Throwable"
    },
    {
      "type":"java.lang.UnsupportedOperationException"
    },
    {
      "type":"java.lang.annotation.Annotation"
    },
    {
      "type":"java.lang.annotation.Retention"
    },
    {
      "type":"java.lang.reflect.Array"
    },
    {
      "type":"java.lang.reflect.Constructor"
    },
    {
      "type":"java.lang.reflect.Field"
    },
    {
      "type":"java.lang.reflect.Method",
      "methods":[{"name":"canAccess","parameterTypes":["java.lang.Object"] }]
    },
    {
      "type":"java.lang.reflect.Modifier"
    },
    {
      "type":"java.lang.reflect.RecordComponent"
    },
    {
      "type":"java.math.BigDecimal"
    },
    {
      "type":"java.math.BigInteger"
    },
    {
      "type":"java.net.InetAddress"
    },
    {
      "type":"java.net.MalformedURLException"
    },
    {
      "type":"java.net.ServerSocket"
    },
    {
      "type":"java.net.Socket"
    },
    {
      "type":"java.net.SocketException"
    },
    {
      "type":"java.net.URI"
    },
    {
      "type":"java.net.URL"
    },
    {
      "type":"java.net.URLDecoder"
    },
    {
      "type":"java.net.URLEncoder"
    },
    {
      "type":"java.nio.file.Files"
    },
    {
      "type":"java.nio.file.attribute.FileAttribute"
    },
    {
      "type":"java.sql.Date"
    },
    {
      "type":"java.sql.Timestamp"
    },
    {
      "type":"java.time.Instant"
    },
    {
      "type":"java.util.Calendar"
    },
    {
      "type":"java.util.Collection"
    },
    {
      "type":"java.util.Date"
    },
    {
      "type":"java.util.GregorianCalendar"
    },
    {
      "type":"java.util.HashMap"
    },
    {
      "type":"java.util.List"
    },
    {
      "type":"java.util.Map"
    },
    {
      "type":"java.util.Properties"
    },
    {
      "type":"java.util.RandomAccess"
    },
    {
      "type":"java.util.Set"
    },
    {
      "type":"java.util.TimeZone"
    },
    {
      "type":"java.util.UUID"
    },
    {
      "type":"java.util.concurrent.ArrayBlockingQueue"
    },
    {
      "type":"java.util.concurrent.BlockingQueue"
    },
    {
      "type":"java.util.concurrent.ForkJoinTask",
      "fields":[{"name":"aux"},{"name":"status"}]
    },
    {
      "type":"java.util.concurrent.LinkedBlockingQueue"
    },
    {
      "type":"java.util.concurrent.atomic.AtomicBoolean",
      "fields":[{"name":"value"}]
    },
    {
      "type":"java.util.concurrent.atomic.AtomicReference",
      "fields":[{"name":"value"}]
    },
    {
      "type":"java.util.concurrent.locks.ReentrantLock"
    },
    {
      "type":"java.util.regex.Matcher"
    },
    {
      "type":"java.util.regex.Pattern"
    },
    {
      "type":"jdk.internal.misc.Unsafe"
    },
    {
      "type":"minestorm.core__init"
    },
    {
      "type":"net.kyori.adventure.text.serializer.gson.impl.JSONComponentSerializerProviderImpl"
    },
    {
      "type":"net.minestom.server.MinecraftServer"
    },
    {
      "type":"net.minestom.server.adventure.provider.MinestomComponentLoggerProvider"
    },
    {
      "type":"net.minestom.server.adventure.provider.MinestomGsonComponentSerializerProvider"
    },
    {
      "type":"net.minestom.server.adventure.provider.MinestomLegacyComponentSerializerProvider"
    },
    {
      "type":"net.minestom.server.coordinate.Point"
    },
    {
      "type":"net.minestom.server.coordinate.Pos"
    },
    {
      "type":"net.minestom.server.entity.Entity"
    },
    {
      "type":"net.minestom.server.entity.EntityType"
    },
    {
      "type":"net.minestom.server.entity.EntityView$Option",
      "fields":[{"name":"auto"}]
    },
    {
      "type":"net.minestom.server.entity.MetadataHolder",
      "fields":[{"name":"notifyAboutChanges"}]
    },
    {
      "type":"net.minestom.server.entity.Player"
    },
    {
      "type":"net.minestom.server.event.EventNodeLazyImpl",
      "fields":[{"name":"mapped"}]
    },
    {
      "type":"net.minestom.server.event.GlobalEventHandler"
    },
    {
      "type":"net.minestom.server.event.player.AsyncPlayerConfigurationEvent"
    },
    {
      "type":"net.minestom.server.event.player.PlayerSpawnEvent"
    },
    {
      "type":"net.minestom.server.instance.Instance"
    },
    {
      "type":"net.minestom.server.instance.InstanceContainer"
    },
    {
      "type":"net.minestom.server.instance.InstanceManager"
    },
    {
      "type":"net.minestom.server.instance.block.Block"
    },
    {
      "type":"net.minestom.server.instance.block.Block$Setter",
      "methods":[{"name":"setBlock","parameterTypes":["int","int","int","net.minestom.server.instance.block.Block"] }]
    },
    {
      "type":"net.minestom.server.instance.generator.GenerationUnit"
    },
    {
      "type":"net.minestom.server.instance.generator.GeneratorImpl$DynamicFork"
    },
    {
      "type":"net.minestom.server.instance.generator.GeneratorImpl$UnitImpl",
      "methods":[{"name":"fork","parameterTypes":["java.util.function.Consumer"] }]
    },
    {
      "type":"net.minestom.server.instance.generator.UnitModifier"
    },
    {
      "type":"net.minestom.server.timer.TaskImpl",
      "fields":[{"name":"parked"}]
    },
    {
      "type":"net.minestom.server.world.biome.Biome"
    },
    {
      "type":"net.minestom.server.world.biome.Biome$Builder"
    },
    {
      "type":"noise.FastNoiseLite"
    },
    {
      "type":"noise.FastNoiseLite$FractalType"
    },
    {
      "type":"noise.FastNoiseLite$NoiseType"
    },
    {
      "type":"org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields":[{"name":"producerLimit"}]
    },
    {
      "type":"org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
      "fields":[{"name":"consumerIndex"}]
    },
    {
      "type":"org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
      "fields":[{"name":"producerIndex"}]
    },
    {
      "type":"org.jctools.queues.MpUnboundedXaddArrayQueueConsumerFields",
      "fields":[{"name":"consumerChunk"},{"name":"consumerIndex"}]
    },
    {
      "type":"org.jctools.queues.MpUnboundedXaddArrayQueueProducerChunk",
      "fields":[{"name":"producerChunk"},{"name":"producerChunkIndex"}]
    },
    {
      "type":"org.jctools.queues.MpUnboundedXaddArrayQueueProducerFields",
      "fields":[{"name":"producerIndex"}]
    },
    {
      "type":"org.jctools.queues.MpUnboundedXaddChunk",
      "fields":[{"name":"index"},{"name":"next"},{"name":"prev"}]
    },
    {
      "type":"org.jctools.queues.MpscArrayQueueConsumerIndexField",
      "fields":[{"name":"consumerIndex"}]
    },
    {
      "type":"org.jctools.queues.MpscArrayQueueProducerIndexField",
      "fields":[{"name":"producerIndex"}]
    },
    {
      "type":"org.jctools.queues.MpscArrayQueueProducerLimitField",
      "fields":[{"name":"producerLimit"}]
    },
    {
      "type":"org.jctools.queues.SpscArrayQueueConsumerIndexField",
      "fields":[{"name":"consumerIndex"}]
    },
    {
      "type":"org.jctools.queues.SpscArrayQueueProducerIndexFields",
      "fields":[{"name":"producerIndex"}]
    },
    {
      "type":"space.vectrix.flare.fastutil.Int2ObjectSyncMapImpl$ExpungingEntryImpl",
      "fields":[{"name":"value"}]
    },
    {
      "type":"space.vectrix.flare.fastutil.Long2ObjectSyncMapImpl$ExpungingEntryImpl",
      "fields":[{"name":"value"}]
    },
    {
      "type":"sun.misc.Unsafe",
      "fields":[{"name":"theUnsafe"}]
    },
    {
      "type":"sun.security.provider.NativePRNG",
      "methods":[{"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
    },
    {
      "type":"sun.security.provider.SHA",
      "methods":[{"name":"<init>","parameterTypes":[] }]
    }
  ],
  "resources":[{
    "glob":"META-INF/services/java.lang.System$LoggerFinder"
  },{
    "glob":"META-INF/services/java.nio.channels.spi.SelectorProvider"
  },{
    "glob":"META-INF/services/java.time.zone.ZoneRulesProvider"
  },{
    "glob":"META-INF/services/net.kyori.adventure.text.logger.slf4j.ComponentLoggerProvider"
  },{
    "glob":"META-INF/services/net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Provider"
  },{
    "glob":"META-INF/services/net.kyori.adventure.text.serializer.json.JSONComponentSerializer$Provider"
  },{
    "glob":"META-INF/services/net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Provider"
  },{
    "glob":"META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
  },{
    "glob":"attributes.json"
  },{
    "glob":"banner_patterns.json"
  },{
    "glob":"biomes.json"
  },{
    "glob":"blocks.json"
  },{
    "glob":"chat_types.json"
  },{
    "glob":"clojure/core.clj"
  },{
    "glob":"clojure/core/protocols.clj"
  },{
    "glob":"clojure/core/protocols__init.class"
  },{
    "glob":"clojure/core/server.clj"
  },{
    "glob":"clojure/core/server__init.class"
  },{
    "glob":"clojure/core__init.class"
  },{
    "glob":"clojure/core_deftype.clj"
  },{
    "glob":"clojure/core_deftype__init.class"
  },{
    "glob":"clojure/core_print.clj"
  },{
    "glob":"clojure/core_print__init.class"
  },{
    "glob":"clojure/core_proxy.clj"
  },{
    "glob":"clojure/core_proxy__init.class"
  },{
    "glob":"clojure/edn.clj"
  },{
    "glob":"clojure/edn__init.class"
  },{
    "glob":"clojure/genclass.clj"
  },{
    "glob":"clojure/genclass__init.class"
  },{
    "glob":"clojure/gvec.clj"
  },{
    "glob":"clojure/gvec__init.class"
  },{
    "glob":"clojure/instant.clj"
  },{
    "glob":"clojure/instant__init.class"
  },{
    "glob":"clojure/java/io.clj"
  },{
    "glob":"clojure/java/io__init.class"
  },{
    "glob":"clojure/main.clj"
  },{
    "glob":"clojure/main__init.class"
  },{
    "glob":"clojure/spec/alpha.clj"
  },{
    "glob":"clojure/spec/alpha__init.class"
  },{
    "glob":"clojure/spec/gen/alpha.clj"
  },{
    "glob":"clojure/spec/gen/alpha__init.class"
  },{
    "glob":"clojure/string.clj"
  },{
    "glob":"clojure/string__init.class"
  },{
    "glob":"clojure/uuid.clj"
  },{
    "glob":"clojure/uuid__init.class"
  },{
    "glob":"clojure/version.properties"
  },{
    "glob":"clojure/walk.clj"
  },{
    "glob":"clojure/walk__init.class"
  },{
    "glob":"command_arguments.json"
  },{
    "glob":"damage_types.json"
  },{
    "glob":"data_readers.clj"
  },{
    "glob":"data_readers.cljc"
  },{
    "glob":"dimension_types.json"
  },{
    "glob":"enchantments.snbt"
  },{
    "glob":"entities.json"
  },{
    "glob":"feature_flags.json"
  },{
    "glob":"items.json"
  },{
    "glob":"jukebox_songs.json"
  },{
    "glob":"minestorm/core.clj"
  },{
    "glob":"minestorm/core__init.class"
  },{
    "glob":"org/slf4j/impl/StaticLoggerBinder.class"
  },{
    "glob":"painting_variants.json"
  },{
    "glob":"sounds.json"
  },{
    "glob":"tags/block.json"
  },{
    "glob":"tags/enchantment.json"
  },{
    "glob":"tags/entity_type.json"
  },{
    "glob":"tags/fluid.json"
  },{
    "glob":"tags/game_event.json"
  },{
    "glob":"tags/item.json"
  },{
    "glob":"trim_materials.json"
  },{
    "glob":"trim_patterns.json"
  },{
    "glob":"user.clj"
  },{
    "glob":"wolf_variants.json"
  }],
  "bundles":[],
  "serialization":[
  ],
  "jni":[
    {
      "type":"java.lang.Boolean",
      "methods":[{"name":"getBoolean","parameterTypes":["java.lang.String"] }]
    },
    {
      "type":"sun.launcher.LauncherHelper",
      "fields":[{"name":"isStaticMain"},{"name":"noArgMain"}]
    },
    {
      "type":"sun.management.VMManagementImpl",
      "fields":[{"name":"compTimeMonitoringSupport"},{"name":"currentThreadCpuTimeSupport"},{"name":"objectMonitorUsageSupport"},{"name":"otherThreadCpuTimeSupport"},{"name":"remoteDiagnosticCommandsSupport"},{"name":"synchronizerUsageSupport"},{"name":"threadAllocatedMemorySupport"},{"name":"threadContentionMonitoringSupport"}]
    }
  ]
}